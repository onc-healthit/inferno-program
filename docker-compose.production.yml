version: '3.2'
services:
  inferno:
    build:
      context: ./
    volumes:
      - ./config.yml:/var/www/inferno/config.yml
      - ./data:/var/www/inferno/data
      - ./batch:/var/www/inferno/batch
      - type: bind
        source: "./resources/terminology/validators"
        target: "/var/www/inferno/resources/terminology/validators"
    depends_on:
      - validator_service
      - db
    restart: unless-stopped
    networks:
      - inferno-production
    environment:
      INFERNO_CONNECTION_STRING: 'postgres://postgres@db/inferno_program'
  db:
    image: postgres:9.6-alpine
    restart: unless-stopped
    volumes:
      - inferno-pgdata:/var/lib/postgresql/data
    networks:
      - inferno-production
    environment:
      POSTGRES_DB: inferno_program
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: postgres
  validator_service:
    image: infernocommunity/fhir-validator-service:v1.2.0
    restart: unless-stopped
    networks:
      - inferno-production
    environment:
      DISABLE_TX: 'true'
  nginx:
    image: nginx
    networks:
      - inferno-production
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "4567:80"
    command: [nginx, '-g', 'daemon off;']
    depends_on:
      - inferno
volumes:
  inferno-pgdata:
networks:
  inferno-production: