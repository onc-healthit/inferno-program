name: onc_program
title: 2015 Edition Cures Update -  Standardized API Testing
description: ONC Standardized API Testing 
fhir_version: r4
default_test_set: test_procedure
hide_optional: true
test_sets:
  test_procedure:
    view: onc_program
    tests:
      - name: Standalone Patient App - Full Patient Access
        short_label: Standalone Patient App
        run_all: true
        overview: |
          This scenario demonstrates the ability of a system to perform a Patient Standalone
          Launch to a [SMART on FHIR](http://www.hl7.org/fhir/smart-app-launch/)
          confidential client with a patient context, refresh token, and [OpenID
          Connect (OIDC)](https://openid.net/specs/openid-connect-core-1_0.html)
          identity token.  After launch, a simple Patient resource read is
          performed on the patient in context.  The access token is then
          refreshed, and the Patient resource is read using the new access token
          to ensure that the refresh was successful. The authentication
          information provided by OpenID Connect is decoded and validated, and
          simple queries are performed to ensure that access is granted to all
          USCDI data elements.
        input_instructions: |
          Enter in the appropriate scope to enable patient-level access to all
          relevant resources.  In addition, support for the OpenID Connect
          (`openid fhirUser`), refresh tokens (`offline_access`), and patient
          context (`launch/patient`) are required.
        lock_variables: 
          - redirect_uris
          - onc_sl_confidential_client
        sequences:
          - sequence: OncStandaloneSMARTDiscoverySequence
            prefix: SPA
          - sequence: OncStandaloneLaunchSequence
            prefix: SPB
            title: Standalone Launch with Patient Scope
            description: Perform Standalone SMART launch sequence and test OpenID Connect and token refresh functionality.
            variable_defaults:
              onc_sl_scopes: launch/patient patient/*.read openid fhirUser offline_access
              onc_sl_confidential_client: true
          - sequence: OncStandaloneOpenIDConnectSequence
            prefix: SPC
            description: Use OpenID Connect ID token provided during launch sequence to authenticate user.
          - sequence: OncStandaloneTokenRefreshSequence
            prefix: SPD
            description: Use refresh token to get new access token and verify it can access resources.
          - USCore311ONCAccessVerifyUnrestrictedSequence
      - name: Standalone Patient App - Limited Access
        short_label: Limited App
        run_all: true
        overview: |
          This scenario demonstrates the ability to perform a Patient Standalone
          Launch to a [SMART on FHIR](http://www.hl7.org/fhir/smart-app-launch/)
          confidential client with limited access granted to the app based on user input.
          The tester is expected to grant the application access to a subset of
          desired resource types, and to deny requests for "offline_access"
          refresh tokens.
        input_instructions: |
          The purpose of this test is to demonstrate that users can restrict
          access granted to apps to a limited number of resources and does
          not force the user to have offline_access refresh tokens.  Enter
          which resources the user will grant access to below, and during
          the launch process only grant access to those resources. Additionally,
          do not grant access to offline_access refresh tokens.  Inferno
          will verify that access granted matches these expectations.
        lock_variables: 
          - redirect_uris
          - onc_sl_url
          - onc_sl_scopes
          - oauth_authorize_endpoint
          - oauth_token_endpoint
          - onc_sl_confidential_client
          - onc_sl_client_id
          - onc_sl_client_secret
        sequences:
          - sequence: OncStandaloneRestrictedLaunchSequence
            prefix: RPA
            title: Standalone Launch with Limited Scope
            description: Perform Standalone SMART launch expecting limited scope access.
          - USCore311ONCAccessVerifyRestrictedSequence
      - name: EHR Practitioner App
        short_label: EHR Practitioner App
        run_all: true
        overview: |
          Demonstrate the ability to perform an EHR launch to a [SMART on
          FHIR](http://www.hl7.org/fhir/smart-app-launch/) confidential client
          with patient context, refresh token, and [OpenID Connect
          (OIDC)](https://openid.net/specs/openid-connect-core-1_0.html)
          identity token.  After launch, a simple Patient resource read is
          performed on the patient in context.  The access token is then
          refreshed, and the Patient resource is read using the new access token
          to ensure that the refresh was successful.  Finally, the
          authentication information provided by OpenID Connect is decoded and
          validated.
        lock_variables: 
          - redirect_uris
          - confidential_client
        sequences:
          - sequence: OncSMARTDiscoverySequence
            prefix: EHA
          - sequence: OncEHRLaunchSequence
            prefix: EHB
            title: EHR Launch with Practitioner Scope
            description: Perform EHR SMART launch sequence and test OpenID Connect and token refresh functionality.
            variable_defaults:
              confidential_client: 'true'
          - sequence: OncOpenIDConnectSequence
            prefix: EHC
            description: Use OpenID Connect ID token provided during launch sequence to authenticate user.
          - sequence: OncTokenRefreshSequence
            prefix: EHD
            description: Use refresh token to retrieve new access token and verify it can access resources.
        input_instructions: |
          Enter in the appropriate scope to enable user-level access to all relevant resources.  In addition, support for the 
          OpenID Connect (`openid fhirUser`), refresh tokens (`offline_access`), and EHR context (`launch`) are required.  This test
          expects that the EHR will launch the application with a patient context.

          After `execute` is pressed, Inferno will wait for the system under test to launch the application.
      - name: Single Patient API
        short_label: Single Patient API
        run_all: true
        run_skipped: true
        overview: >
          For each of the relevant USCDI data elements provided in the
          conformance statement, this test executes the [required supported
          searches](https://www.hl7.org/fhir/us/core/CapabilityStatement-us-core-server.html)
          as defined by the US Core Implementation Guide v3.1.  The test begins
          by searching by one or more patients, with the expectation that the
          Bearer token provided to the test grants access to all USCDI
          resources. It uses results returned from that query to generate other
          queries and checks that the results are consistent with the provided
          search parameters.  It then performs a read on each Resource returned
          and validates the response against the relevant
          [profile](https://www.hl7.org/fhir/us/core/profiles.html) as currently
          defined in the US Core Implementation Guide. All MUST SUPPORT elements
          must be seen before the test can pass, as well as Data Absent Reason
          to demonstrate that the server can properly handle missing data. Note that
          Encounter, Organization and Practitioner resources must be accessible as
          references in some US Core profiles to satisfy must support
          requirements, and those references will be validated to their US Core profile.
          These resources will not be tested for FHIR search support.
        lock_variables: 
          - token
        sequences:
          - UsCoreR4CapabilityStatementSequence
          - USCore311PatientSequence
          - USCore311AllergyintoleranceSequence
          - USCore311CareplanSequence
          - USCore311CareteamSequence
          - USCore311ConditionSequence
          - USCore311ImplantableDeviceSequence
          - USCore311DiagnosticreportNoteSequence
          - USCore311DiagnosticreportLabSequence
          - USCore311DocumentreferenceSequence
          - USCore311GoalSequence
          - USCore311ImmunizationSequence
          - USCore311MedicationrequestSequence
          - USCore311SmokingstatusSequence
          - USCore311PediatricWeightForHeightSequence
          - USCore311ObservationLabSequence
          - USCore311PediatricBmiForAgeSequence
          - USCore311PulseOximetrySequence
          - USCore311BodyheightSequence
          - USCore311BodytempSequence
          - USCore311BpSequence
          - USCore311BodyweightSequence
          - USCore311HeadOccipitalFrontalCircumferencePercentileSequence
          - USCore311HeartrateSequence
          - USCore311ResprateSequence
          - USCore311ProcedureSequence
          - USCoreR4ClinicalNotesSequence
          - USCore311EncounterSequence
          - USCore311OrganizationSequence
          - USCore311PractitionerSequence
          - USCore311ProvenanceSequence
          - USCoreR4DataAbsentReasonSequence
      - name: Multi-Patient Authorization and API
        short_label: Multi-Patient API
        run_all: true
        run_skipped: false
        overview: >
          Demonstrate the ability to export clinical data for multiple patients
          in a group using [FHIR Bulk Data Access
          IG](https://hl7.org/fhir/uv/bulkdata/). This test uses [Backend
          Services
          Authorization](https://hl7.org/fhir/uv/bulkdata/authorization/index.html)
          to obtain an access token from the server. After authorization, a
          group level bulk data export request is initialized. Finally, this
          test reads exported NDJSON files from the server and validates the
          resources in each file. To run the test successfully, the selected
          group export is required to have every type of resource mapped to
          [USCDI data
          elements](https://www.healthit.gov/isa/us-core-data-interoperability-uscdi). Additionally,
          it is expected the server will provide Encounter, Location, Organization, and
          Practitioner resources as they are referenced as must support elements in
          required resources.
        input_instructions: |
          Register Inferno as a bulk data client with the following information, and enter the client id and client registration in the appropriate fields.
          This set of tests only checks the Group export.  Enter the group export information in the appropriate box.
        sequences:
          - BulkDataAuthorizationSequence
          - BulkDataGroupExportSequence
          - BulkDataGroupExportValidationSequence
      - name: Additional Tests
        short_label: Other
        run_all: false
        run_skipped: false
        overview: >
          Not all requirements that need to be tested fit within the previous
          scenarios.  The tests contained in this section addresses remaining
          testing requirements. Each of these tests need to be run
          independently.  Please read the instructions for each in the 'About'
          section, as they may require special setup on the part of the tester.
        sequences:
          - sequence: OncStandalonePublicLaunchSequence
          - sequence: TokenRevocationSequence
          - sequence: SMARTInvalidAudSequence
            variable_defaults:
              confidential_client: 'true'
          - sequence: SMARTInvalidLaunchSequence
            variable_defaults:
              confidential_client: 'true'
          - ONCVisualInspectionSequence
