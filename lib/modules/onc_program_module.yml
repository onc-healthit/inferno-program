name: onc_program
title: 2015 Edition Cures Update -  Standardized API Testing
description: ONC Standardized API Testing 
fhir_version: r4
default_test_set: test_procedure
hide_optional: true
test_sets:
  test_procedure:
    view: onc_program
    tests:
      - name: Standalone Patient App
        overview: |
          This scenario demonstrates the ability to perform a Patient Standalone Launch to a [SMART on FHIR](http://www.hl7.org/fhir/smart-app-launch/) client with a patient context,
          refresh token, and [OpenID Connect (OIDC)](https://openid.net/specs/openid-connect-core-1_0.html) identity token.  After launch, a simple Patient resource read is performed
          on the patient in context.  The access token is then refreshed, and the Patient resource is read using the new
          access token to ensure that the refresh was successful.  Finally, the authentication information provided by OpenID Connect is decoded and validated.
        input_instructions: |
          Enter in the appropriate scope to enable patient-level access to all relevant resources.  In addition, support for the 
          OpenID Connect (`openid fhirUser`), refresh tokens (`offline_access`), and patient context (`launch/patient`) are required.
        lock_variables: 
          - redirect_uris
          - onc_sl_confidential_client
        sequences:
          - sequence: OncStandaloneSMARTDiscoverySequence
            prefix: SPA
          - sequence: OncStandaloneLaunchSequence
            prefix: SPB
            title: Standalone Launch with Patient Scope
            description: Perform Standalone SMART launch sequence and test OpenID Connect and token refresh functionality.
            variable_defaults:
              onc_sl_scopes: launch/patient launch/encounter patient/*.read openid fhirUser offline_access
              onc_sl_confidential_client: true
          - sequence: OncStandaloneOpenIDConnectSequence
            prefix: SPC
            description: Use OpenID Connect ID token provided during launch sequence to authenticate user.
          - sequence: OncStandaloneTokenRefreshSequence
            prefix: SPD
            description: Use refresh token to get new access token and verify it can access resources.
          - ONCAccessVerifyUnrestrictedSequence
      - name: Limited Scope App
        overview: |
          This scenario demonstrates the ability to perform a Patient Standalone Launch to a [SMART on FHIR](http://www.hl7.org/fhir/smart-app-launch/) client with a patient context,
          refresh token, and [OpenID Connect (OIDC)](https://openid.net/specs/openid-connect-core-1_0.html) identity token.  After launch, a simple Patient resource read is performed
          on the patient in context.  The access token is then refreshed, and the Patient resource is read using the new
          access token to ensure that the refresh was successful.  Finally, the authentication information provided by OpenID Connect is decoded and validated.
        input_instructions: |
          The purpose of this test is to demonstrate that an app can be restricted to a subset of scopes.  This can either be done by having the app
          request a subset of resource type scopes to be read, or by having the user select a subset of resources to grant an app access to during launch.
          This uses the same app that was registered and used in the standalone patient app launch.  This test requires a patient context to be granted.
        lock_variables: 
          - redirect_uris
          - onc_sl_url
          - oauth_authorize_endpoint
          - oauth_token_endpoint
          - onc_sl_confidential_client
          - onc_sl_client_id
          - onc_sl_client_secret
        sequences:
          - sequence: OncStandaloneRestrictedLaunchSequence
            prefix: RPA
            title: Standalone Launch with Limited Scope
            description: Perform Standalone SMART launch expecting limited scope access.
          - ONCAccessVerifyRestrictedSequence
      - name: EHR Practitioner App
        overview: |
          Demonstrate the ability to perform an EHR launch to a [SMART on FHIR](http://www.hl7.org/fhir/smart-app-launch/) client with a patient context,
          refresh token, and [OpenID Connect (OIDC)](https://openid.net/specs/openid-connect-core-1_0.html) identity token.  After launch, a simple Patient resource read is performed
          on the patient in context.  The access token is then refreshed, and the Patient resource is read using the new
          access token to ensure that the refresh was successful.  Finally, the authentication information provided by OpenID Connect is decoded and validated.
        lock_variables: 
          - redirect_uris
          - confidential_client
        sequences:
          - sequence: OncSMARTDiscoverySequence
            prefix: EHA
          - sequence: OncEHRLaunchSequence
            prefix: EHB
            title: EHR Launch with Practitioner Scope
            description: Perform EHR SMART launch sequence and test OpenID Connect and token refresh functionality.
            variable_defaults:
              scopes: launch user/*.read openid fhirUser offline_access
              confidential_client: 'true'
          - sequence: OncOpenIDConnectSequence
            prefix: EHC
            description: Use OpenID Connect ID token provided during launch sequence to authenticate user.
          - sequence: OncTokenRefreshSequence
            prefix: EHD
            description: Use refresh token to retrieve new access token and verify it can access resources.
        input_instructions: |
          Enter in the appropriate scope to enable user-level access to all relevant resources.  In addition, support for the 
          OpenID Connect (`openid fhirUser`), refresh tokens (`offline_access`), and EHR context (`launch`) are required.  This test
          expects that the EHR will launch the application with a patient context.

          After `execute` is pressed, Inferno will wait for the system under test to launch the application.
      - name: Single Patient Query
        run_all: true
        run_skipped: true
        overview: >
          For each of the relevant USCDI data elements provided in the conformance statement, this test executes the [required supported searches](http://www.fhir.org/guides/argonaut/r2/Conformance-server.html)
          as defined by the Argonaut Data Query Implementation Guide.  The test begins by searching by Patient provided in the most recent SMART App Launch performed by Inferno.  It uses results returned from that
          query to generate other queries and checks that the results are consistent with the provided search parameters.  It then performs a read on each Resource returned and validates the response against the 
          relevant [profile](http://www.fhir.org/guides/argonaut/r2/profiles.html) as currently defined in the Argonaut Data Query Implementation Guide.
        lock_variables: 
          - token
        sequences:
          - UsCoreR4CapabilityStatementSequence
          - USCore310PatientSequence
          - USCore310AllergyintoleranceSequence
          - USCore310CareplanSequence
          - USCore310CareteamSequence
          - USCore310ConditionSequence
          - USCore310ImplantableDeviceSequence
          - USCore310DiagnosticreportNoteSequence
          - USCore310DiagnosticreportLabSequence
          - USCore310DocumentreferenceSequence
          - USCore310EncounterSequence
          - USCore310GoalSequence
          - USCore310ImmunizationSequence
          - USCore310MedicationrequestSequence
          - USCore310SmokingstatusSequence
          - USCore310PediatricWeightForHeightSequence
          - USCore310ObservationLabSequence
          - USCore310PediatricBmiForAgeSequence
          - USCore310PulseOximetrySequence
          - USCore310BodyheightSequence
          - USCore310BodytempSequence
          - USCore310BpSequence
          - USCore310BodyweightSequence
          - USCore310HeadcircumSequence
          - USCore310HeartrateSequence
          - USCore310ResprateSequence
          - USCore310ProcedureSequence
          - USCoreR4ClinicalNotesSequence
          - USCore310LocationSequence
          - USCore310OrganizationSequence
          - USCore310PractitionerSequence
          - USCore310PractitionerroleSequence
          - USCore310ProvenanceSequence
          - USCoreR4DataAbsentReasonSequence
      - name: Multi-Patient Query
        run_all: true
        run_skipped: false
        overview: >
          Demonstrate the ability to export clinical data for multiple patients in a group using [FHIR Bulk Data Access IG](https://hl7.org/fhir/uv/bulkdata/). This test uses 
          [Backend Services Authorization](https://hl7.org/fhir/uv/bulkdata/authorization/index.html) to obtain an access token from the server. After authorization, a group level bulk data export 
          request is initialized. Finally, this test reads exported NDJSON files from the server and validates the resources in each file. To run the test successfully, the selected group export is required
          to have every type of resource mapped to [USCDI data elements](https://www.healthit.gov/isa/us-core-data-interoperability-uscdi).
        input_instructions: |
          Register Inferno as a bulk data client with the following information, and enter the client id and client registration in the appropriate fields.
          This set of tests only checks the Group export.  Enter the group export information in the appropriate box.
          
        sequences:
          - BulkDataAuthorizationSequence
          - BulkDataGroupExportSequence
          - BulkDataGroupExportValidationSequence
