procedure:
  - section: Paragraph (g)(10)(iii) - Application registration
    steps:
      - group: Application Registration
        index: 1
        SUT: |
          The health IT developer demonstrates the Health IT Module
          supports application registration with an authorization server for
          the purposes of Electronic Health Information (EHI) access for
          single patients, including support for application registration
          functions to enable authentication and authorization in §
          170.315(g)(10)(v)
        TLV: |
          The tester verifies the Health IT Module supports application
          registration with an authorization server for the purposes of EHI
          access for single patients, including support for application
          registration functions to enable authentication and authorization in
          § 170.315(g)(10)(v).
        inferno_supported: no
        inferno_notes: |
          Application registration is considered out of scope for Inferno
          Program Edition because it cannot be done in an automated fashion.
          Inferno Program Edition may in the future include Dynamic Registration
          functionality for those systems that support that standard.  It may
          also include an input field to allow the tester to document that this
          has been performed.
      - index: 2
        SUT: |
          The health IT developer demonstrates the Health IT Module
          supports application registration with an authorization server for
          the purposes of EHI access for multiple patients, including support
          for application registration functions to enable authentication and
          authorization in § 170.315(g)(10)(v).
        TLV: |
          The tester verifies the Health IT Module supports application
          registration with an authorization server for the purposes of EHI
          access for multiple patients including support for application
          registration functions to enable authentication and authorization in
          § 170.315(g)(10)(v).
        inferno_supported: no
        inferno_notes: |
          Application registration is considered out of scope for Inferno
          Program Edition because it cannot be accomplished using automation.
          Inferno Program Edition may in the future include OAuth Dynamic Registration
          functionality for those systems that support that standard.  It may
          also include an input field to allow the tester to document that this
          has been performed.
  - section: Paragraph (g)(10)(iv) – Secure connection
    steps:
      - group: Secure connection
        index: 1
        SUT: | 
          For all transmissions between the Health IT Module and the
          application, the health IT developer demonstrates the use of a
          secure and trusted connection in accordance with the
          implementation specifications adopted in § 170.215(a)(2) and §
          170.215(a)(3), including:
          * Using TLS version 1.2 or higher; and
          * Conformance to FHIR Communications Security requirements.
        TLV: |
          For all transmissions between the Health IT Module and the
          application, the tester verifiesthe use of a secure and trusted
          connection in accordance with the implementation specifications
          adopted in § 170.215(a)(2) and § 170.215(a)(3), including:
          * Using TLS version 1.2 or higher; and
          * Conformance to FHIR Communications Security requirements.
        inferno_supported: yes
        inferno_tests:
          - SPB-OSLS-01
          - SPB-OSLS-04
          - RPA-OSRLS-01
          - RPA-OSRLS-04
          - EHB-OELS-03
          - USCCAP-01
  - section: Paragraph (g)(10)(v)(A) – Authentication and authorization for patient and user scopes
    steps:
      - group: Authentication and Authorization for Patient and User Scopes
        index: 1
        SUT: | 
          The health IT developer demonstrates the ability of the Health IT
          Module to support the following for “EHR-Launch,” “StandaloneLaunch,”
          and “Both” (“EHR-Launch” and “Standalone-Launch”) as
          specified in the implementation specification adopted in §
          170.215(a)(3).
        TLV: |
          The tester verifies the ability of the Health IT Module to support
          the following for “EHR-Launch,” “Standalone-Launch,” and “Both”
          (“EHR-Launch” and “Standalone-Launch”) as specified in the
          implementation specification adopted in § 170.215(a)(3).
        inferno_supported: yes
      - index: 2
        SUT: |
          [EHR-Launch] The health IT developer demonstrates the ability of
          the Health IT Module to initiate a “launch sequence” using the
          “launch-ehr" “SMART on FHIR Core Capability” SMART EHR Launch
          mode detailed in the implementation specification adopted in §
          170.215(a)(3), including:
          * Launching the registered launch URL of the application; and
          * Passing the parameters: “iss” and “launch”.
        TLV: |
          [EHR-Launch] The tester verifies the ability of the Health IT
          Module to initiate a “launch sequence” using the “launch-ehr"
          “SMART on FHIR Core Capability” SMART EHR Launch mode
          detailed in the implementation specification adopted in §
          170.215(a)(3), including:
          * Launching the registered launch URL of the application; and
          * Passing the parameters: “iss” and “launch”.
        inferno_supported: yes
        inferno_tests:
          - EHB-OELS-01 - EHB-OELS-02
      - index: 3
        SUT: |
          [Standalone-Launch] The health IT developer demonstrates the
          ability of the Health IT Module to launch using the “launch-standalone"
          "SMART on FHIR Core Capability" SMART Standalone
          Launch mode detailed in the implementation specification
          adopted in § 170.215(a)(3).
        TLV: |
          [Standalone-Launch] The tester verifies the ability of the Health IT
          Module to launch using the “launch-standalone" “SMART on FHIR
          Core Capability” SMART Standalone Launch mode detailed in the
          implementation specification adopted in § 170.215(a)(3).
        inferno_supported: yes
        inferno_tests:
          - SPA-OSD-01 - SPA-OSD-06
          - SPB-OSLS-01 - SPB-OSLS-09
      - index: 4
        SUT: |
          [Both] The health IT developer demonstrates the ability of the
          Health IT Module to support the following as detailed in the
          implementation specification adopted in § 170.215(a)(3) and
          standard adopted in § 170.215(a)(1):
          * The “.well-known/smart-configuration.json” path; and
          * A FHIR “CapabilityStatement”.
        TLV: |
          [Both] The tester verifiesthe ability of the Health IT Module to
          support the following as detailed in the implementation
          specification adopted in § 170.215(a)(3) and standard adopted in §
          170.215(a)(1):
          * The “.well-known/smart-configuration.json” path; and
          * A FHIR “CapabilityStatement”.
        inferno_supported: yes
        inferno_tests:
          - SPA-OSD-01 - SPA-OSD-02
          - EHA-OSD-01 - EHA-OSD-02
      - index: 5
        SUT: |
          [Both] The health IT developer demonstrates the ability of the
          “.well-known/smart-configuration.json” path to support at least
          the following as detailed in the implementation specification
          adopted in § 170.215(a)(3):
          * “authorization_endpoint”;
          * “token_endpoint”; and
          * “capabilities” (including support for all the “SMART on FHIR Core Capabilities”).
        TLV: |
          [Both] The tester verifies the ability of the “.well-known/smartconfiguration.json”
          path to support at least the following as detailed in the implementation specification
          adopted in § 170.215(a)(3):
          * “authorization_endpoint”;
          * “token_endpoint”; and
          * “capabilities” (including support for all the “SMART on FHIR Core Capabilities”).
        inferno_supported: yes
        inferno_tests:
          - SPA-OSD-06
          - EHA-OSD-06
      - index: 6
        SUT: |
          [Both] The health IT developer demonstrates the ability of the
          FHIR “CapabilityStatement” to support at least the following
          components as detailed in the implementation specification
          adopted in § 170.215(a)(3) and standard adopted in §
          170.215(a)(1), including:
          * “authorize”; and
          * “token”.
        TLV: |
          [Both] The tester verifiesthe ability of the FHIR
          “CapabilityStatement” to support at least the following
          components as detailed in the implementation specification
          adopted in § 170.215(a)(3) and standard adopted in §
          170.215(a)(1), including:
          * “authorize”; and
          * “token”.
        inferno_supported: yes
        inferno_tests:
          - SPA-OSD-04
          - EHA-OSD-04
      - index: 7
        SUT: |
          [Both] The health IT developer demonstrates the ability of the
          Health IT Module to receive an authorization request according to
          the implementation specification adopted in § 170.215(a)(3),
          including support for the following parameters:
          * “response_type”;
          * “client_id”;
          * “redirect_uri”;
          * “launch” (for EHR-Launch mode only);
          * “scope”;
          * “state”; and
          * “aud”.
        TLV: |
          [Both] The tester verifies the ability of the Health IT Module to
          receive an authorization request according to the implementation
          specification adopted in § 170.215(a)(3), including support for the
          following parameters:
          * “response_type”;
          * “client_id”;
          * “redirect_uri”;
          * “launch” (for EHR-Launch mode only);
          * “scope”;
          * “state”; and
          * “aud”.
        inferno_supported: yes
        inferno_tests: 
            - SPB-OSLS-02 - SPB-OSLS-03
            - EHA-OSLS-04 - EHA-OSLS-05
      - index: 8
        SUT: |
          [Both] The health IT developer demonstrates the ability of the
          Health IT Module to support the receipt of the following scopes
          according to the implementation specification adopted in §
          170.215(a)(3) and standard adopted in § 170.215(b):
          * “openid” (to support “sso-openid-connect” “SMART on FHIR Core Capability”);
          * “fhirUser” (to support “sso-openid-connect” “SMART on FHIR Core Capability”);
          * “need_patient_banner” (to support “context-banner” “SMART on FHIR Core Capability” for EHR-Launch mode only);
          * “smart_style_url” (to support “context-style” “SMART on FHIR Core Capability” for EHR-Launch mode only);
          * “launch/patient” (to support “context-standalone-patient” “SMART on FHIR Core Capability” for Standalone-Launch mode only);
          * “launch” (for EHR-Launch mode only);
          * “offline_access” (to support “permission-offline” “SMART on FHIR Core Capability”);
          * Patient-level scopes(to support “permission-patient” “SMART on FHIR Core Capability”); and
          * User-level scopes (to support “permission-user” “SMART on FHIR Core Capability”).
        TLV: |
          [Both] The tester verifiesthe ability of the Health IT Module to
          support the receipt of the following scopes according to the
          implementation specification adopted in § 170.215(a)(3) and
          standard adopted in § 170.215(b):
          * “openid” (to support “sso-openid-connect” “SMART on FHIR Core Capability”);
          * “fhirUser” (to support “sso-openid-connect” “SMART on FHIR Core Capability”);
          * “need_patient_banner” (to support “context-banner” “SMART on FHIR Core Capability” for EHR-Launch mode only);
          * “smart_style_url” (to support “context-style” “SMART on FHIR Core Capability” for EHR-Launch mode only);
          * “launch/patient” (to support “context-standalone-patient” “SMART on FHIR Core Capability” for Standalone-Launch mode only);
          * “launch” (for EHR-Launch mode only);
          * “offline_access” (to support “permission-offline” “SMART on FHIR Core Capability”);
          * Patient-level scopes (to support “permission-patient” “SMART on FHIR Core Capability”); and
          * User-level scopes (to support “permission-user” “SMART on FHIR Core Capability”).
        inferno_supported: yes
        inferno_tests:
          - SPB-OSLS-02
          - SPB-OSLS-07 - SPB-OSLS-08
          - SPB-OSLS-10
          - SPB-OSLS-12
          - EHB-OELS-05
          - EHB-OELS-09 - EHB-OELS-10
          - EHB-OELS-12
          - EHB-OELS-14 - EHB-OELS-16
      - index: 9
        SUT: |
          [Both] The health IT developer demonstrates the ability of the
          Health IT Module to evaluate the authorization request and
          request end-user input, if applicable (required for patient-facing
          applications), including the ability for the end-user to authorize an
          application to receive Electronic Health Information (EHI) based
          on FHIR resource-level scopes for all of the FHIR resources
          associated with the profiles specified in the standard adopted in
          § 170.213 and implementation specification adopted in
          § 170.215(a)(2), including:
          * “AllergyIntolerance”;
          * “CarePlan”;
          * “CareTeam”;
          * “Condition”;
          * “Device”;
          * “DiagnosticReport”;
          * “DocumentReference”;
          * “Encounter”;
          * “Goal”;
          * “Immunization”;
          * “Location”;
          * “Medication” (if supported);
          * “MedicationRequest”;
          * “Observation”;
          * “Organization”;
          * “Practitioner”;
          * “PractitionerRole”;
          * “Procedure”; and
          * “Provenance”.
        TLV: |
          [Both] The tester verifies the ability of the
          Health IT Module to evaluate the authorization request and
          request end-user input, if applicable (required for patient-facing
          applications), including the ability for the end-user to authorize an
          application to receive Electronic Health Information (EHI) based
          on FHIR resource-level scopes for all of the FHIR resources
          associated with the profiles specified in the standard adopted in
          § 170.213 and implementation specification adopted in
          § 170.215(a)(2), including:
          * “AllergyIntolerance”;
          * “CarePlan”;
          * “CareTeam”;
          * “Condition”;
          * “Device”;
          * “DiagnosticReport”;
          * “DocumentReference”;
          * “Encounter”;
          * “Goal”;
          * “Immunization”;
          * “Location”;
          * “Medication” (if supported);
          * “MedicationRequest”;
          * “Observation”;
          * “Organization”;
          * “Practitioner”;
          * “PractitionerRole”;
          * “Procedure”; and
          * “Provenance”.
        inferno_supported: partial
        inferno_notes: |
          If the patient API uses a separate FHIR endpoint than the practitioner-facing API,
          we do not test the second order (non-USCDI) resources because our tests are not
          sophisticated enough in this area to find references to check.  Specifically:
          Organization, Practioner, PractitionerRole.  We overtest for Encounter on the patient API
          tests.  For the pratitioner EHR launch, we may not require all scopes anywhere explicitly,
          though we do test for all resources which implies that we require all scopes.
        inferno_tests:
          - SPB-OSLS-01 - SPB-OSLS-08
          - EHB-OELS-01 - EHB-OELS-10
          - AVU-01 - AVU-12
          - USCP-08
          - USCAI-03
          - USCCP-05
          - USCCT-02
          - USCC-06
          - USCID-03
          - USCDRRN-07
          - USCDRLRR-07
          - USCDR-08
          - USCG-04
          - USCI-04
          - USCMR-05
          - USCSSO-06
          - USCPWHO-06
          - USCLRO-06
          - USCPBMIAO-06
          - USCPO-06
          - USCOBH-06
          - USCOBT-06
          - USCOBP-06
          - USCOBW-06
          - USCOHC-06
          - USCOHR-06
          - USCORR-06
          - USCPROC-05
          - USCL-01
          - USCO-01
          - USCPR-01
          - USCPRO-01
          - USCPROV-01
      - index: 10 
        SUT: |
          [Both] The health IT developer demonstrates the ability of the
          Health IT Module to deny an application’s authorization request
          according to a patient’s preferences selected in step 9 of this
          section in accordance with the implementation specification
          adopted in § 170.215(a)(3).
        TLV: |
          [Both] The tester verifiesthe ability of the Health IT Module to
          deny an application’s authorization request according to a
          patient’s preferences selected in step 9 of this section in
          accordance with the implementation specification adopted in §
          170.215(a)(3).
        inferno_supported: partial
        inferno_notes: |
          The tests currently do not check for the ability to deny second order
          (non-USCDI) resources  because our tests are not
          sophisticated enough in this area to find references to check.
        inferno_tests:
          - SPB-OSLS-01 - SPB-OSLS-08
          - AVR-01 - AVR-15
      - index: 11
        SUT: |
          [Both] The health IT developer demonstrates the ability of Health IT Module to
          evaluate the authorization request and request end-user input, if
          applicable (required for patient-facing applications), including the
          ability for the end-user to explicitly enable the “offline_access”
          scope according to the implementation specification adopted in §
          170.215(a)(3).
        TLV: |
          [Both] The tester verifies the ability of Health IT Module to
          evaluate the authorization request and request end-user input, if
          applicable (required for patient-facing applications), including the
          ability for the end-user to explicitly enable the “offline_access”
          scope according to the implementation specification adopted in §
          170.215(a)(3).
        inferno_supported: partial
        inferno_notes: |
          The tool cannot determine automatically whether or not end-user input
          was required, and does not currently have a place where the tester
          can note this.
        inferno_tests:
          - SPB-OSLS-01 - SPB-OSLS-08
      - index: 12
        SUT: |
          [EHR-Launch] The health IT developer demonstrates the ability of
          the Health IT Module to return an error response if the following
          parameters provided by an application to the Health IT Module in
          step 7 of this section do not match the parameters originally
          provided to an application by the Health IT Module in step 2 of
          this section according to the implementation specification
          adopted in § 170.215(a)(3):
          * “launch”; and
          * “aud”.
        TLV: |
          [EHR-Launch] The tester verifies the ability of the Health IT
          Module to return an error response if the following parameters
          provided by an application to the Health IT Module in step 7 of
          this section do not match the parameters originally provided to an
          application by the Health IT Module in step 2 of this section
          according to the implementation specification adopted in §
          170.215(a)(3):
          * “launch”; and
          * “aud”.
        inferno_supported: planned
        inferno_notes: |
          Inferno does not currently test this becuase it requires the tool to
          redirect the user to a 'dead end' and the interface does not yet handle
          these types of situations.
      - index: 13
        SUT: |
          [Both] The health IT developer demonstrates the ability of the
          Health IT Module to grant an application access to EHI by
          returning an authorization code to the application according to
          the implementation specification adopted in § 170.215(a)(3),
          including the following parameters:
          * “code”; and
          * “state”.
        TLV: |
          [Both] The tester verifies the ability of the
          Health IT Module to grant an application access to EHI by
          returning an authorization code to the application according to
          the implementation specification adopted in § 170.215(a)(3),
          including the following parameters:
          * “code”; and
          * “state”.
        inferno_supported: yes
        inferno_tests: 
          - SPB-OSLS-03
          - EHB-OELS-05
      - index: 14
        SUT: |
          [Both] The health IT developer demonstrates the ability of the
          Health IT Module to receive the following parameters from an
          application according to the implementation specification adopted
          in § 170.215(a)(3):
          * “grant_type”;
          * “code”;
          * “redirect_uri”;
          * “client_id”; and
          * Authorization header including “client_id” and “client_secret
        TLV: |
          [Both] The tester verifies the ability of the
          Health IT Module to receive the following parameters from an
          application according to the implementation specification adopted
          in § 170.215(a)(3):
          * “grant_type”;
          * “code”;
          * “redirect_uri”;
          * “client_id”; and
          * Authorization header including “client_id” and “client_secret
        inferno_supported: yes
        inferno_tests:
          - SPB-OSLS-07
          - EHB-OELS-09
      - index: 15
        SUT: |
          [Both] The health IT developer demonstrates the ability of the
          Health IT Module to return a JSON object to applications according
          to the implementation specification adopted in § 170.215(a)(3)
          and standard adopted in § 170.215(b), including the following:
          * “access_token”;
          * “token_type”;
          * “scope”;
          * “id_token”;
          * “refresh_token” (valid for a period of no shorter than three months);
          * HTTP “Cache-Control” response header field with a value of “no-store”;
          * HTTP “Pragma” response header field with a value of “nocache”;
          * “patient” (to support “context-ehr-patient” and “contextstandalone-patient” “SMART on FHIR Core Capabilities”);
          * “need_patient_banner” (to support “context-banner” “SMART on FHIR Core Capability” for EHR-Launch mode only); and
          * “smart_style_url” (to support “context-style” “SMART on FHIR Core Capability” for EHR-Launch mode only).
        TLV: |
          [Both] The tester verifies the ability of the
          Health IT Module to return a JSON object to applications according
          to the implementation specification adopted in § 170.215(a)(3)
          and standard adopted in § 170.215(b), including the following:
          * “access_token”;
          * “token_type”;
          * “scope”;
          * “id_token”;
          * “refresh_token” (valid for a period of no shorter than three months);
          * HTTP “Cache-Control” response header field with a value of “no-store”;
          * HTTP “Pragma” response header field with a value of “nocache”;
          * “patient” (to support “context-ehr-patient” and “contextstandalone-patient” “SMART on FHIR Core Capabilities”);
          * “need_patient_banner” (to support “context-banner” “SMART on FHIR Core Capability” for EHR-Launch mode only); and
          * “smart_style_url” (to support “context-style” “SMART on FHIR Core Capability” for EHR-Launch mode only).
        inferno_supported: yes
        inferno_tests: 
          - SPB-OSLS-08
          - EHB-OELS-10
      - index: 16
        SUT: |
          [Both] The health IT developer demonstrates the ability of the
          Health IT Module to deny an application’s authorization request in
          accordance with the implementation specification adopted in §
          170.215(a)(3).
        TLV: |
          [Both] The tester demonstrates the ability of the
          Health IT Module to deny an application’s authorization request in
          accordance with the implementation specification adopted in §
          170.215(a)(3).
        inferno_supported: partial
        inferno_notes: |
          Inferno does check to see that the client can deny portions of the scopes
          requested, regarding which resources are available.  We do not
          check a full denial.
        inferno_tests:
          - RPA-OSRLS-02 - RPA-OSRLS-08
          - AVR-01 - AVR-15
      - index: 17
        SUT: |
          [Standalone-Launch] The health IT developer the ability of the Health IT
          Module to return a “Patient” FHIR resource that matches the
          patient context provided in step 8 of this section according to the
          implementation specification adopted in § 170.215(a)(2).
        TLV: |
          [Standalone-Launch] The tester verifiesthe ability of the Health IT
          Module to return a “Patient” FHIR resource that matches the
          patient context provided in step 8 of this section according to the
          implementation specification adopted in § 170.215(a)(2).
        inferno_supported: yes
        inferno_tests:
          - SPB-OSLS-12
      - index: 18
        SUT: |
          [Both] The health IT developer demonstrates the ability of the
          Health IT Module to grant an access token when a refresh token is
          supplied according to the implementation specification adopted in
          § 170.215(a)(2).
        TLV: |
          [Both] The health IT developer demonstrates the ability of the
          Health IT Module to grant an access token when a refresh token is
          supplied according to the implementation specification adopted in
          § 170.215(a)(2).
        inferno_supported: yes
        inferno_tests:
          - SPD-TR-03 - SPD-TR-05
          - EHD-TR-03 - EHD-TR-05
      - group: Subsequent Connections: Authentication and Authorization for Patient and User Scopes
        index: 19
        SUT: | 
          The health IT developer demonstrates the ability of the Health IT
          Module to issue a new refresh token valid for a period of no
          shorter than three months without requiring re-authentication
          and re-authorization when a valid refresh token is supplied by the
          application according to the implementation specification adopted
          in § 170.215(a)(3).
        TLV: | 
          The tester verifies the ability of the Health IT
          Module to issue a new refresh token valid for a period of no
          shorter than three months without requiring re-authentication
          and re-authorization when a valid refresh token is supplied by the
          application according to the implementation specification adopted
          in § 170.215(a)(3).
        inferno_supported: no
        inferno_notes: |
          Inferno does not require that refresh tokens are refreshed along with
          access tokens.  This is an additional requirement by the ONC rule above
          the referenced standards.  An additional check needs to be added
          to make sure that a refresh token is returned along with the access token
          during the token refresh exchange.  Additionally, Inferno cannot
          determine the duration of the refresh token in an automated fashion.
          It may be possible to use the Token Introspection standard to do this,
          if supported, though this is only a weak guarentee that the refresh token
          is valid for that length of time.
      - index: 20
        SUT: |
          The health IT developer demonstrates the ability of the Health IT
          Module to return an error response when supplied an invalid
          refresh token as specified in the implementation specification
          adopted in § 170.215(a)(3).
        TLV: |
          The tester verifies the ability of the Health IT
          Module to return an error response when supplied an invalid
          refresh token as specified in the implementation specification
          adopted in § 170.215(a)(3).
        inferno_supported: yes
        inferno_tests:
          - SPD-TR-01 - SPD-TR-02
          - EHD-TR-01 - EHD-TR-02
  - section: Paragraph (g)(10)(vi) – Patient authorization revocation
    steps:
      - group: Patient Authorization Revocation
        index: 1
        SUT: |
          The health IT developer demonstrates the ability of the Health IT Module to revoke
          access to an authorized application at a patient’s direction,
          including a demonstration of the inability of the application with
          revoked access to receive patient EHI.
        TLV: |
          The tester verifiesthe ability of the Health IT Module to revoke
          access to an authorized application at a patient’s direction,
          including a demonstration of the inability of the application with
          revoked access to receive patient EHI.
        inferno_supported: no
        inferno_notes: |
          Inferno does not currently have a scenario where an authorization is revoked.
          This should be done.
  - section: Authentication and authorization for system scopes
    steps:
      - group: Authentication and Authorization for System Scopes
        index: 1
        SUT: |
          The health IT developer demonstrates the ability of the Health IT
          Module to support OAuth 2.0 client credentials grant flow in
          accordance with the implementation specification adopted in §
          170.215(a)(4).
        TLV: |
          The tester verfies the ability of the Health IT
          Module to support OAuth 2.0 client credentials grant flow in
          accordance with the implementation specification adopted in §
          170.215(a)(4).
        inferno_supported: yes
        inferno_tests:
          - BDA-02 - BDA-08
      - index: 2
        SUT: |
          The health IT developer demonstrates the ability of the Health IT
          Module to support the following parameters according to the
          implementation specification adopted in § 170.215(a)(4):
          * “scope”;
          * “grant_type”;
          * “client_assertion_type”; and
          * “client_assertion”
        TLV: |
          The tester verifies the ability of the Health IT
          Module to support the following parameters according to the
          implementation specification adopted in § 170.215(a)(4):
          * “scope”;
          * “grant_type”;
          * “client_assertion_type”; and
          * “client_assertion”
        inferno_supported: yes
        inferno_tests:
          - BDA-07
      - index: 3
        SUT: |
          The tester verifies the ability of the Health IT
          Module to support the following JSON Web Token (JWT) Headers
          and Claims according to the implementation specification adopted
          in § 170.215(a)(4):
          * “alg” header;
          * “kid” header;
          * “typ” header;
          * “iss” claim;
          * “sub” claim;
          * “aud” claim;
          * “exp” claim; and
          * “jti” claim.
        TLV: |
          The tester verifies the ability of the Health IT
          Module to support the following JSON Web Token (JWT) Headers
          and Claims according to the implementation specification adopted
          in § 170.215(a)(4):
          * “alg” header;
          * “kid” header;
          * “typ” header;
          * “iss” claim;
          * “sub” claim;
          * “aud” claim;
          * “exp” claim; and
          * “jti” claim.
        inferno_supported: yes
        inferno_tests:
          - BDA-07
      - index: 4
        SUT: |
          The tester verifies the ability of the Health IT
          Module to receive and process the JSON Web Key (JWK) Set via a
          TLS-protected URL to support authorization for system scopes in §
          170.315(g)(10)(v)(B).
        TLV: |
          The tester verifies the ability of the Health IT
          Module to receive and process the JSON Web Key (JWK) Set via a
          TLS-protected URL to support authorization for system scopes in §
          170.315(g)(10)(v)(B).
        inferno_supported: partial
        inferno_notes: |
          Inferno allows you to either use the JWK Set URL or a manually registered
          key.  This should be made into two separate tests.
        inferno_tests:
          - BDA-07
      - index: 5
        SUT: |
          The health IT developer demonstrates that the Health IT Module
          does not cache a JWK Set received via a TLS-protected URL for
          longer than the “cache-control” header received by an application
          indicates.
        TLV: |
          The tester verifies the Health IT Module
          does not cache a JWK Set received via a TLS-protected URL for
          longer than the “cache-control” header received by an application
          indicates.
        inferno_supported: no
        inferno_notes: |
          Since Inferno does not require the use of the JWK Set URL, it does
          not check the cache expiration.  Testing this will require setting
          a very short experiation time on the set provided at the URL,
          then seeing if the server checks the URL again.
      - index: 6
        SUT: |
          The health IT developer demonstrates the ability of the Health IT
          Module to validate an application’s JWT, including its JSON Web
          Signatures, according to the implementation specification adopted
          in § 170.215(a)(4).
        TLV: |
          The tester verifies the ability of the Health IT
          Module to validate an application’s JWT, including its JSON Web
          Signatures, according to the implementation specification adopted
          in § 170.215(a)(4).
        inferno_supported: yes
        inferno_tests:
          - BDA-07
      - index: 7
        SUT: |
          The health IT developer demonstrates the ability of the Health IT
          Module to respond with an “invalid_client” error for errors
          encountered during the authentication process according to the
          implementation specification adopted in § 170.215(a)(4).
        TLV: |
          The tester verifies the ability of the Health IT
          Module to respond with an “invalid_client” error for errors
          encountered during the authentication process according to the
          implementation specification adopted in § 170.215(a)(4).
        inferno_supported: yes
        inferno_tests:
          - BDA-02 - BDA-06
      - index: 8
        SUT: |
          The health IT developer demonstrates the ability of the Health IT
          Module to assure the scope requested by an application is no
          greater than the pre-authorized scope for multiple patients
          according to the implementation specification adopted in §
          170.215(a)(4).
        TLV: |
          The tester verifies the ability of the Health IT
          Module to assure the scope requested by an application is no
          greater than the pre-authorized scope for multiple patients
          according to the implementation specification adopted in §
          170.215(a)(4).
        inferno_supported: no
        gap_descripton: |
          There is no requirement for support of a subset of the resources
          so you can't check to see what happens when you attempt to access
          more than what was pre-authorized.
      - index: 9
        SUT: |
          The health IT developer demonstrates the ability of the Health IT
          Module to issue an access token to an application as a JSON object
          in accordance with the implementation specification adopted in §
          170.215(a)(4), including the following property names:
          * “access_token”;
          * “token_type”;
          * “expires_in”; and
          * “scope”
        TLV: |
          The tester verifies the ability of the Health IT
          Module to issue an access token to an application as a JSON object
          in accordance with the implementation specification adopted in §
          170.215(a)(4), including the following property names:
          * “access_token”;
          * “token_type”;
          * “expires_in”; and
          * “scope”
        inferno_supported: yes
        inferno_tests:
          - BDA-08
      - index: 10
        SUT: |
          The health IT developer demonstrates the ability of the Health IT
          Module to respond to errors using the appropriate error messages
          as specified in the implementation specification adopted in §
          170.215(a)(4).
        TLV: |
          The tester verifies the ability of the Health IT
          Module to respond to errors using the appropriate error messages
          as specified in the implementation specification adopted in §
          170.215(a)(4).
        inferno_supported: yes
        inferno_tests:
          - BDA-02 - BDA-06
          - BDE-03 - BDE-05
  - section: Paragraph (g)(10)(vii) –Token introspection
    steps:
      - group: Token Introspection
        index: 1
        SUT: |
          The health IT developer demonstrates the ability of the Health IT
          Module to receive and validate a token it has issued.
        TLV: |
          The tester verifies the ability of the Health IT
          Module to receive and validate a token it has issued.
        inferno_supported: no
        inferno_notes: |
          No standard is required and therefore Inferno cannot do this in
          an automated fashion.
  - section: Paragraph (g)(10)(ii) – Supported search operations
    steps:
      - group: Supported Search Operations for a Single Patient’s Data
        index: 1
        SUT: |
          The health IT developer demonstrates the ability of the Health IT
          Module to support the “capabilities” interaction as specified in the
          standard adopted in § 170.215(a)(1), including support for a
          “CapabilityStatement” as specified in the standard adopted in §
          170.215(a)(1) and implementation specification adopted in §
          170.215(a)(2).
        TLV: |
          The tester verfies the ability of the Health IT
          Module to support the “capabilities” interaction as specified in the
          standard adopted in § 170.215(a)(1), including support for a
          “CapabilityStatement” as specified in the standard adopted in §
          170.215(a)(1) and implementation specification adopted in §
          170.215(a)(2).
        inferno_supported: yes
        inferno_tests:
          - USCCAP-02 - USCCAP-05
      - index: 2
        SUT: |
          The health IT developer demonstrates the ability of the Health IT
          Module to respond with data that meet the following conditions:
          * All data elements indicated with a cardinality of one or greater and / or “must support” are included;
          * Content is structurally correct;
          * All invariant rules are met;
          * All data elements with required “ValueSet” bindings contain codes within the bound “ValueSet”;
          * All information is accurate and without omission; and
          * All references within the resources can be resolved and validated, as applicable, according to steps 2-6 of this section
        TLV: |
          The tester verfies the ability of the Health IT
          Module to respond with data that meet the following conditions:
          * All data elements indicated with a cardinality of one or greater and / or “must support” are included;
          * Content is structurally correct;
          * All invariant rules are met;
          * All data elements with required “ValueSet” bindings contain codes within the bound “ValueSet”;
          * All information is accurate and without omission; and
          * All references within the resources can be resolved and validated, as applicable, according to steps 2-6 of this section
        inferno_supported: yes
        inferno_tests:
          - USCP
          - USCAI
          - USCCP
          - USCCT
          - USCC
          - USCID
          - USCDRRN
          - USCDRLRR
          - USCDR
          - USCG
          - USCI
          - USCMR
          - USCSSO
          - USCPWHO
          - USCLRO
          - USCPBMIAO
          - USCPO
          - USCOBH
          - USCOBT
          - USCOBP
          - USCOBW
          - USCOHC
          - USCOHR
          - USCORR
          - USCPROC
          - USCCN
          - USCL
          - USCO
          - USCPR
          - USCPRO
          - USCPROV
      - index: 3
        SUT: |
          The health IT developer demonstrates the ability of the Health IT
          Module to support a “Provenance” FHIR resource for all the FHIR
          resources included in the standard adopted in § 170.213 and
          implementation specification adopted in § 170.215(a)(2) according
          to the “Basic Provenance Guidance” section of the implementation
          specification adopted in § 170.215(a)(2).

        TLV: |
          The tester verfies the ability of the Health IT
          Module to support a “Provenance” FHIR resource for all the FHIR
          resources included in the standard adopted in § 170.213 and
          implementation specification adopted in § 170.215(a)(2) according
          to the “Basic Provenance Guidance” section of the implementation
          specification adopted in § 170.215(a)(2).
        inferno_supported: yes
        inferno_tests:
          - USCP-11
          - USCAI-06
          - USCCP-08
          - USCCT-05
          - USCC-09
          - USCID-06
          - USCDRRN-10
          - USCDRLRR-10
          - USCDR-11
          - USCG-07
          - USCI-07
          - USCMR-09
          - USCSSO-09
          - USCPWHO-09
          - USCLRO-09
          - USCPBMIAO-09
          - USCPO-09
          - USCOBH-09
          - USCOBT-09
          - USCOBP-09
          - USCOBW-09
          - USCOHC-09
          - USCOHR-09
          - USCORR-09
          - USCPROC-08
          - USCPROV-01 - USCPROV-06
      - index: 4
        SUT: |
          The health IT developer demonstrates the ability of the Health IT
          Module to support a “DocumentReference” FHIR resource for each
          of the “Clinical Notes” and “Diagnostic Reports” included in the
          “Clinical Notes Guidance” section of the implementation
          specification adopted in § 170.215(a)(2).
        TLV: |
          The tester verfies the ability of the Health IT
          Module to support a “DocumentReference” FHIR resource for each
          of the “Clinical Notes” and “Diagnostic Reports” included in the
          “Clinical Notes Guidance” section of the implementation
          specification adopted in § 170.215(a)(2).
        inferno_supported: yes
        inferno_tests:
          - USCCN-01 - USCCN-09
      - index: 5
        SUT: |
          If supported, and for responses to data for a single patient only, the
          health IT developer demonstrates the ability of the Health IT
          Module to support a “Medication” FHIR resource according to the
          “Medication List Guidance” section of the implementation
          specification adopted in § 170.215(a)(2).
        TLV: |
          If supported, and for responses to data for a single patient only, the
          tester verfies the ability of the Health IT
          Module to support a “Medication” FHIR resource according to the
          “Medication List Guidance” section of the implementation
          specification adopted in § 170.215(a)(2).
        inferno_supported: yes
        inferno_tests:
          - USCMR-11
      - index: 6
        SUT: |
          The health IT developer demonstrates the ability of the Health IT
          Module to support “DataAbsentReason” as specified in the
          implementation specification adopted in § 170. 215(a)(2),
          including:
          * “DataAbsentReason” Extension; and
          * “DataAbsentReason” Code System.
        TLV: |
          The tester verfies the ability of the Health IT
          Module to support “DataAbsentReason” as specified in the
          implementation specification adopted in § 170. 215(a)(2),
          including:
          * “DataAbsentReason” Extension; and
          * “DataAbsentReason” Code System.
        inferno_supported: yes
        inferno_tests: 
          - USCDAR-01 - USCDAR-02
      - group: Response to Requests for a Single Patient’s Data
        index: 7
        SUT: |
          The health IT developer demonstrates the ability of the Health IT
          Module to return all of the data associated with requests for a
          single patient’s data according to the “US Core Server
          CapabilityStatement” section of the implementation specification
          adopted in § 170.215(a)(2) for all the data included in the standard
          adopted in § 170.213.
        TLV: |
          The tester verifies the ability of the Health IT
          Module to return all of the data associated with requests for a
          single patient’s data according to the “US Core Server
          CapabilityStatement” section of the implementation specification
          adopted in § 170.215(a)(2) for all the data included in the standard
          adopted in § 170.213.
        inferno_supported: yes
        inferno_tests:
          - USCP
          - USCAI
          - USCCP
          - USCCT
          - USCC
          - USCID
          - USCDRRN
          - USCDRLRR
          - USCDR
          - USCG
          - USCI
          - USCMR
          - USCSSO
          - USCPWHO
          - USCLRO
          - USCPBMIAO
          - USCPO
          - USCOBH
          - USCOBT
          - USCOBP
          - USCOBW
          - USCOHC
          - USCOHR
          - USCORR
          - USCPROC
          - USCCN
          - USCL
          - USCO
          - USCPR
          - USCPRO
          - USCPROV
      - group: Response to Requests for Multiple Patients’ Data
        index: 8
        SUT: |
          The health IT developer demonstrates the ability of the Health IT
          Module to respond to requests for multiple patients’ data
          according to the implementation specification adopted in §
          170.215(a)(4) for all of the FHIR resources associated with the
          profiles and Data Elements specified in and according to the 
          standard adopted in § 170.213 and implementation specification
          adopted in § 170.215(a)(2), including the following FHIR resources:
          “AllergyIntolerance”;
          * “CarePlan”;
          * “CareTeam”;
          * “Condition”;
          * “Device”;
          * “DiagnosticReport”;
          * “DocumentReference”;
          * “Encounter”;
          * “Goal”;
          * “Immunization”;
          * “Location”;
          * “Medication” (if supported);
          * “MedicationRequest”;
          * “Observation”;
          * “Organization”;
          * “Practitioner”;
          * “PractitionerRole”;
          * “Procedure”; and
          * “Provenance”
        TLV: |
          The tester verifies the ability of the Health IT
          Module to respond to requests for multiple patients’ data
          according to the implementation specification adopted in §
          170.215(a)(4) for all of the FHIR resources associated with the
          profiles and Data Elements specified in and according to the 
          standard adopted in § 170.213 and implementation specification
          adopted in § 170.215(a)(2), including the following FHIR resources:
          “AllergyIntolerance”;
          * “CarePlan”;
          * “CareTeam”;
          * “Condition”;
          * “Device”;
          * “DiagnosticReport”;
          * “DocumentReference”;
          * “Encounter”;
          * “Goal”;
          * “Immunization”;
          * “Location”;
          * “Medication” (if supported);
          * “MedicationRequest”;
          * “Observation”;
          * “Organization”;
          * “Practitioner”;
          * “PractitionerRole”;
          * “Procedure”; and
          * “Provenance”
        inferno_supported: yes
        inferno_tests:
          - BDGV-03
          - BDGV-06 - BDGV-23
      - index: 9
        SUT: |
          The health IT developer demonstrates the ability of the Health IT
          Module to limit the data returned to only those FHIR resources for
          which the client is authorized according to the implementation
          specification adopted in § 170.215(a)(4).
        TLV: |
          The tester verifies the ability of the Health IT
          Module to limit the data returned to only those FHIR resources for
          which the client is authorized according to the implementation
          specification adopted in § 170.215(a)(4).
        inferno_supported: no
        inferno_notes: |
          Inferno does not do this because there is no requirement to only
          supported a subset of the scopes.
      - index: 10
        SUT: |
          The health IT developer demonstrates the ability of the Health IT
          Module to support a successful data response according to the
          implementation adopted in § 170.215(a)(4).
        TLV: |
          The tester verifies the ability of the Health IT
          Module to support a successful data response according to the
          implementation adopted in § 170.215(a)(4).
        inferno_supported: yes
        inferno_tests:
          - BDE-06 - BDE-07
      - index: 11
        SUT: |
          The health IT developer demonstrates the ability of the Health IT
          Module to support a data response error according to the
          implementation adopted in § 170.215(a)(4).
        TLV: |
          The tester verifies the ability of the Health IT
          Module to support a data response error according to the
          implementation adopted in § 170.215(a)(4).
        inferno_supported: yes
        inferno_tests:
          - BDE-03 - BDE-05
      - index: 12
        SUT: |
          The health IT developer demonstrates the ability of the Health IT
          Module to support a bulk data delete request according to the
          implementation specification adopted in § 170.215(a)(4).
        TLV: |
          The tester verifies the ability of the Health IT
          Module to support a bulk data delete request according to the
          implementation specification adopted in § 170.215(a)(4).
        inferno_supported: yes
        inferno_tests:
          - BDE-10
      - index: 13
        SUT: |
          The health IT developer demonstrates the ability of the Health IT
          Module to support a bulk data status request according to the
          implementation specification adopted in § 170.215(a)(4).
        TLV: |
          The tester verifies the ability of the Health IT
          Module to support a bulk data status request according to the
          implementation specification adopted in § 170.215(a)(4).
        inferno_supported: yes
        inferno_tests:
          - BDE-07 - BDE-08
      - index: 14
        SUT: |
          The health IT developer demonstrates the ability of the Health IT
          Module to support a file request according to the implementation
          specification adopted in § 170.215(a)(4), including support for the
          “ndjson” format for files provided.
        TLV: |
          The tester verifies the ability of the Health IT
          Module to support a file request according to the implementation
          specification adopted in § 170.215(a)(4), including support for the
          “ndjson” format for files provided.
        inferno_supported: yes
        inferno_tests:
          - BDGV-01 - BDGV-23
      - index: 15
        SUT: |
          The health IT developer demonstrates that the information
          provided as part of this data response includes data for patients in
          the group identifier provided during the “group-export” request.
        TLV: |
          The tester verifies the information
          provided as part of this data response includes data for patients in
          the group identifier provided during the “group-export” request.
        inferno_supported: yes
        inferno_tests:
          - BDGV-05
  - section: Paragraph (g)(10)(viii) – Documentation
    steps:
      - group: Supported Search Operations for a Single Patient’s Data
        index: 1
        SUT: |
          The health IT developer supplies documentation describing the
          API(s) of the Health IT Module and includes at a minimum:
          * API syntax;
          * Function names;
          * Required and optional parameters supported and their data types;
          * Return variables and their types/structures;
          * Exceptions and exception handling methods and their returns;
          * Mandatory software components;
          * Mandatory software configurations; and
          * All technical requirements and attributes necessary for registration.
        TLV: |
          The tester verifies the
          API(s) of the Health IT Module and includes at a minimum:
          * API syntax;
          * Function names;
          * Required and optional parameters supported and their data types;
          * Return variables and their types/structures;
          * Exceptions and exception handling methods and their returns;
          * Mandatory software components;
          * Mandatory software configurations; and
          * All technical requirements and attributes necessary for registration.
        inferno_supported: no
        inferno_notes: |
          Inferno does not check documentation requirements.
      - index: 2
        SUT: |
          The health IT developer demonstrates that the documentation
          described in step 1 of this section is available via a publicly
          accessible hyperlink that does not require preconditions or
          additionalsteps to access.
        TLV: |
          The tester verifies the documentation
          described in step 1 of this section is available via a publicly
          accessible hyperlink that does not require preconditions or
          additionalsteps to access.
        inferno_supported: no
        inferno_notes: |
          Inferno does not check documentation requirements.